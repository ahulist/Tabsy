/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hulist.gui;

import java.awt.Color;
import java.awt.event.ItemEvent;
import java.io.File;
import java.util.logging.Handler;
import java.util.logging.Level;
import java.util.logging.LogRecord;
import java.util.logging.Logger;
import java.util.prefs.Preferences;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.UIManager;
import javax.swing.text.DefaultCaret;
import com.hulist.logic.ProcessData;
import com.hulist.logic.WindowParams;
import com.hulist.logic.second_column.SecondColumnFileTypes;
import com.hulist.logic.second_column.tabs.TabsColumnTypes;
import com.hulist.logic.temperatures.TemperaturesFileTypes;
import com.hulist.util.TextAreaLogHandler;
import com.hulist.util.UserPreferences;
import com.hulist.validators.YearValidator;
import com.hulist.validators.YearsRangeValidator;

/**
 *
 * @author alien
 */
public class MainWindow extends javax.swing.JFrame {

    public static final String APP_NAME = "DendroCOR";

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
        initComponents();
        secondaryInit();
        setUINames();
        setFromPreferences();

        log.log(Level.FINER, "Okno zainicjalizowano.");
    }

    private void secondaryInit() {
        this.setTitle(APP_NAME);

        comboBoxTempFile.setModel(new DefaultComboBoxModel<>(TemperaturesFileTypes.getDisplayNames()));
        comboBoxFileType.setModel(new DefaultComboBoxModel<>(SecondColumnFileTypes.getDisplayNames()));
        comboBoxColSelect.setModel(new DefaultComboBoxModel<>(TabsColumnTypes.values()));

        textPane.setEnabled(true);
        textPane.setEditable(false);
        DefaultCaret caret = (DefaultCaret) textPane.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);

        TextAreaLogHandler.getInstance().setTextArea(textPane);
        globalLog = Logger.getLogger("com.hulist");
        globalLog.addHandler(TextAreaLogHandler.getInstance());
        log = Logger.getLogger(this.getClass().getCanonicalName());
        log.setLevel(Level.ALL);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelYearStart = new javax.swing.JLabel();
        textFieldYearStart = new javax.swing.JTextField();
        labelYearEnd = new javax.swing.JLabel();
        textFieldYearEnd = new javax.swing.JTextField();
        checkBoxAllYears = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        buttonSelectFileColTwo = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        labelLoadedColTwoFileName = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        comboBoxFileType = new javax.swing.JComboBox();
        buttonStart = new javax.swing.JButton();
        comboBoxColSelect = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        labelLoadedTempFile = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        buttonSelectTempFile = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        comboBoxTempFile = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        textPane = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelYearStart.setText("rok początkowy");

        textFieldYearStart.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textFieldYearStartKeyReleased(evt);
            }
        });

        labelYearEnd.setText("rok końcowy");

        textFieldYearEnd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textFieldYearEndKeyReleased(evt);
            }
        });

        checkBoxAllYears.setText("wszystkie dostępne lata");
        checkBoxAllYears.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                checkBoxAllYearsItemStateChanged(evt);
            }
        });

        jLabel2.setText("plik");

        buttonSelectFileColTwo.setText("wybierz");
        buttonSelectFileColTwo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSelectFileColTwoActionPerformed(evt);
            }
        });

        jLabel4.setText("załadowany plik:");

        labelLoadedColTwoFileName.setForeground(new java.awt.Color(255, 0, 0));
        labelLoadedColTwoFileName.setText("brak");

        jLabel3.setText("rodzaj pliku");

        comboBoxFileType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxFileTypeActionPerformed(evt);
            }
        });

        buttonStart.setText("start");
        buttonStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonStartActionPerformed(evt);
            }
        });

        comboBoxColSelect.setEnabled(false);
        comboBoxColSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxColSelectActionPerformed(evt);
            }
        });

        jLabel1.setText("kolumna");

        labelLoadedTempFile.setForeground(new java.awt.Color(255, 0, 0));
        labelLoadedTempFile.setText("brak");

        jLabel6.setText("załadowany plik");

        buttonSelectTempFile.setText("wybierz");
        buttonSelectTempFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSelectTempFileActionPerformed(evt);
            }
        });

        jLabel5.setText("plik klimatyczny");

        jLabel7.setText("rodzaj pliku");

        comboBoxTempFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxTempFileActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(textPane);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(buttonStart, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelYearStart)
                            .addComponent(labelYearEnd)
                            .addComponent(textFieldYearEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textFieldYearStart, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkBoxAllYears))
                        .addGap(90, 90, 90)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(226, 226, 226)
                                .addComponent(jLabel5))
                            .addComponent(labelLoadedColTwoFileName)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(comboBoxFileType, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(buttonSelectFileColTwo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(48, 48, 48)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(comboBoxColSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(74, 74, 74)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboBoxTempFile, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel6)
                                    .addComponent(labelLoadedTempFile)
                                    .addComponent(buttonSelectTempFile, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelYearStart)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(textFieldYearStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(labelYearEnd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldYearEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(checkBoxAllYears))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelLoadedColTwoFileName)
                            .addComponent(labelLoadedTempFile))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(comboBoxFileType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxColSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboBoxTempFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonSelectFileColTwo)
                            .addComponent(buttonSelectTempFile))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))))
                .addGap(26, 26, 26)
                .addComponent(buttonStart)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textFieldYearStartKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldYearStartKeyReleased
        if( YearValidator.validate(textFieldYearStart.getText()) || textFieldYearStart.getText().equals("") ){
            UserPreferences.getInstance().getPrefs().put(textFieldYearStart.getName(), textFieldYearStart.getText());
        }
    }//GEN-LAST:event_textFieldYearStartKeyReleased

    private void textFieldYearEndKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldYearEndKeyReleased
        if( YearValidator.validate(textFieldYearEnd.getText()) || textFieldYearEnd.getText().equals("") ){
            UserPreferences.getInstance().getPrefs().put(textFieldYearEnd.getName(), textFieldYearEnd.getText());
        }
    }//GEN-LAST:event_textFieldYearEndKeyReleased

    private void checkBoxAllYearsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_checkBoxAllYearsItemStateChanged
        boolean isSelected = evt.getStateChange() == ItemEvent.SELECTED;
        if( evt.getItemSelectable() == checkBoxAllYears ){
            checkBoxAllYearsStateChanged(isSelected);
        }
    }//GEN-LAST:event_checkBoxAllYearsItemStateChanged

    private void buttonSelectFileColTwoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSelectFileColTwoActionPerformed
        String lastDirName = UserPreferences.getInstance().getPrefs().get(buttonSelectFileColTwo.getName(), ".");
        File lastDir = new File(lastDirName);
        final JFileChooser fc = new JFileChooser(lastDir);
        int returnVal = fc.showOpenDialog(this);
        File file = null;
        if( returnVal == JFileChooser.APPROVE_OPTION ){
            file = fc.getSelectedFile();
            UserPreferences.getInstance().getPrefs().put(buttonSelectFileColTwo.getName(), file.getParent());
        }
        if( file != null ){
            labelLoadedColTwoFileName.setForeground(Color.getHSBColor(0.33f, 1, 0.65f));
            labelLoadedColTwoFileName.setText(file.getName());
            selectedSecColFile = file;
            log.log(Level.FINE, String.format("Załadowano plik: %s", file.getAbsolutePath()));
        }
    }//GEN-LAST:event_buttonSelectFileColTwoActionPerformed

    private void comboBoxColSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxColSelectActionPerformed
        log.log(Level.FINE, String.format("wybrano kolumn\u0119 %s", comboBoxColSelect.getSelectedItem().toString()));
    }//GEN-LAST:event_comboBoxColSelectActionPerformed

    private void comboBoxFileTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxFileTypeActionPerformed
        JComboBox comboBox = (JComboBox) evt.getSource();
        String choice = comboBox.getSelectedItem().toString();
        log.log(Level.FINE, String.format("Wybrano rodzaj pliku: %s", choice));
        if( choice.equals(SecondColumnFileTypes.TABS.getDisplayName()) ){
            comboBoxColSelect.setEnabled(true);
        } else {
            comboBoxColSelect.setEnabled(false);
        }
    }//GEN-LAST:event_comboBoxFileTypeActionPerformed

    private void buttonStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonStartActionPerformed
        if( isDataValid() ){
            boolean allYears = checkBoxAllYears.isSelected();
            int startYear = -1, endYear = -1;
            if( !allYears ){
                try {
                    startYear = Integer.parseInt(textFieldYearStart.getText());
                    endYear = Integer.parseInt(textFieldYearEnd.getText());
                } catch( NumberFormatException e ) {
                }
            }
            String fileTypeDisplayName = (String) comboBoxFileType.getSelectedItem();
            SecondColumnFileTypes secColFileType = null;
            for( SecondColumnFileTypes type : SecondColumnFileTypes.values() ) {
                if( type.getDisplayName().equals(fileTypeDisplayName) ){
                    secColFileType = type;
                    break;
                }
            }
            TabsColumnTypes columnType = (TabsColumnTypes) comboBoxColSelect.getSelectedItem();
            TemperaturesFileTypes tempFileType = null;
            for( TemperaturesFileTypes type : TemperaturesFileTypes.values() ) {
                if( type.getDisplayName().equals(fileTypeDisplayName) ){
                    tempFileType = type;
                    break;
                }
            }

            WindowParams wp = new WindowParams(allYears,
                    startYear,
                    endYear,
                    selectedSecColFile,
                    selectedTempFile,
                    secColFileType,
                    columnType,
                    tempFileType);
            StringBuilder sb = new StringBuilder();
            sb.append("WindowParams: [")
                    .append(allYears).append(", ")
                    .append(startYear).append(", ")
                    .append(endYear).append(", ")
                    .append(selectedSecColFile).append(", ")
                    .append(selectedTempFile).append(", ")
                    .append(secColFileType).append(", ")
                    .append(columnType).append(", ")
                    .append(tempFileType).append("]");
            log.log(Level.FINEST, sb.toString());
            
            new ProcessData(wp).go();
        } else {
            // TODO
        }
    }//GEN-LAST:event_buttonStartActionPerformed

    private void comboBoxTempFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxTempFileActionPerformed
        log.log(Level.FINE, String.format("wybrano kolumn\u0119 %s", comboBoxTempFile.getSelectedItem().toString()));
    }//GEN-LAST:event_comboBoxTempFileActionPerformed

    private void buttonSelectTempFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSelectTempFileActionPerformed
        String lastDirName = UserPreferences.getInstance().getPrefs().get(buttonSelectTempFile.getName(), ".");
        File lastDir = new File(lastDirName);
        final JFileChooser fc = new JFileChooser(lastDir);
        int returnVal = fc.showOpenDialog(this);
        File file = null;

        if( returnVal == JFileChooser.APPROVE_OPTION ){
            file = fc.getSelectedFile();
            UserPreferences.getInstance().getPrefs().put(buttonSelectTempFile.getName(), file.getParent());
        }

        if( file != null ){
            labelLoadedTempFile.setForeground(Color.getHSBColor(0.33f, 1, 0.65f));
            labelLoadedTempFile.setText(file.getName());
            selectedTempFile = file;
            log.log(Level.FINE, String.format("Załadowano plik klimatyczny: %s", file.getAbsolutePath()));
        }
    }//GEN-LAST:event_buttonSelectTempFileActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
            /*for( javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels() ) {
             if( "Nimbus".equals(info.getName()) ){
             javax.swing.UIManager.setLookAndFeel(info.getClassName());
             break;
             }
             }*/
        } catch( ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex ) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new MainWindow().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonSelectFileColTwo;
    private javax.swing.JButton buttonSelectTempFile;
    private javax.swing.JButton buttonStart;
    private javax.swing.JCheckBox checkBoxAllYears;
    private javax.swing.JComboBox comboBoxColSelect;
    private javax.swing.JComboBox comboBoxFileType;
    private javax.swing.JComboBox comboBoxTempFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelLoadedColTwoFileName;
    private javax.swing.JLabel labelLoadedTempFile;
    private javax.swing.JLabel labelYearEnd;
    private javax.swing.JLabel labelYearStart;
    private javax.swing.JTextField textFieldYearEnd;
    private javax.swing.JTextField textFieldYearStart;
    private javax.swing.JTextPane textPane;
    // End of variables declaration//GEN-END:variables
    private File selectedSecColFile = null;
    private File selectedTempFile = null;
    private Logger log, globalLog;

    private void setUINames() {
        textFieldYearStart.setName("textFieldYearStart");
        textFieldYearEnd.setName("textFieldYearEnd");
        checkBoxAllYears.setName("checkBoxAllYears");
        buttonSelectFileColTwo.setName("buttonSelectFileColTwo");
        buttonSelectTempFile.setName("buttonSelectTempFile");
    }

    private void setFromPreferences() {
        Preferences p = UserPreferences.getInstance().getPrefs();

        textFieldYearStart.setText(p.get(textFieldYearStart.getName(), ""));
        textFieldYearEnd.setText(p.get(textFieldYearEnd.getName(), ""));
        checkBoxAllYears.setSelected(p.getBoolean(checkBoxAllYears.getName(), false));
    }

    /**
     *
     * @param selected true - checkbox selected, false - checkbox unselected
     */
    private void checkBoxAllYearsStateChanged(boolean selected) {
        textFieldYearStart.setEnabled(!selected);
        textFieldYearEnd.setEnabled(!selected);

        UserPreferences.getInstance().getPrefs().putBoolean(checkBoxAllYears.getName(), selected);
    }

    private boolean isDataValid() {
        boolean valid = true;
        if( !checkBoxAllYears.isSelected() && !YearsRangeValidator.validate(textFieldYearStart.getText(), textFieldYearEnd.getText())){
            log.log(Level.WARNING, "Wprowadź poprawny zakres lat.");
            valid = false;
        }
        if( ! (selectedSecColFile!=null && selectedSecColFile.isFile()) ){
            log.log(Level.WARNING, "Wybierz plik.");
            valid = false;
        }
        if( ! (selectedTempFile!=null && selectedTempFile.isFile()) ){
            log.log(Level.WARNING, "Wybierz plik klimatyczny.");
            valid = false;
        }
        return valid;
    }
}
